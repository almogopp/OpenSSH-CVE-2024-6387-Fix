#!/bin/bash

# Variables
SSH_CONFIG_PATH="/etc/ssh/sshd_config"
OPENSSH_PACKAGE_NAME="openssh-server"
MIN_AFFECTED_VERSION_1="8.5p1"
MAX_AFFECTED_VERSION="9.8p1"
PATCHED_VERSION="9.8p1"

# Function to update OpenSSH
update_openssh() {
    echo "Updating OpenSSH to version $PATCHED_VERSION or later..."
    sudo apt-get update
    sudo apt-get install -y $OPENSSH_PACKAGE_NAME
    INSTALLED_VERSION=$(ssh -V 2>&1 | grep -oP "\d+\.\d+p\d+")
    if [ "$(printf '%s\n' "$INSTALLED_VERSION" "$PATCHED_VERSION" | sort -V | head -n1)" != "$PATCHED_VERSION" ]; then
        echo "OpenSSH successfully updated to version $INSTALLED_VERSION."
    else
        echo "Failed to update OpenSSH. Please check for errors."
    fi
}

# Function to apply temporary workaround
apply_temporary_fix() {
    echo "Applying temporary workaround by setting LoginGraceTime to 0..."
    if [ -f "$SSH_CONFIG_PATH" ]; then
        sudo sed -i '/^LoginGraceTime/c\LoginGraceTime 0' "$SSH_CONFIG_PATH"
        sudo systemctl restart sshd
        echo "Temporary workaround applied. SSH service restarted."
    else
        echo "SSH configuration file not found. Cannot apply the workaround."
    fi
}

# Check if the current version is affected by the vulnerability
INSTALLED_VERSION=$(ssh -V 2>&1 | grep -oP "\d+\.\d+p\d+")

if [ "$(printf '%s\n' "$INSTALLED_VERSION" "$MIN_AFFECTED_VERSION_1" | sort -V | head -n1)" == "$MIN_AFFECTED_VERSION_1" ] && \
   [ "$(printf '%s\n' "$INSTALLED_VERSION" "$MAX_AFFECTED_VERSION" | sort -V | head -n1)" == "$INSTALLED_VERSION" ]; then
    echo "Your OpenSSH version $INSTALLED_VERSION is vulnerable to CVE-2024-6387."
    read -p "Do you want to upgrade OpenSSH to a safer version? (yes/no): " response
    if [ "$response" == "yes" ]; then
        update_openssh
    else
        echo "You chose not to upgrade. Applying temporary fix..."
        apply_temporary_fix
    fi
elif [ "$(printf '%s\n' "$INSTALLED_VERSION" "4.4p1" | sort -V | head -n1)" == "$INSTALLED_VERSION" ] && \
     [ "$(printf '%s\n' "$INSTALLED_VERSION" "$MIN_AFFECTED_VERSION_1" | sort -V | head -n1)" == "4.4p1" ]; then
    echo "OpenSSH version $INSTALLED_VERSION is safe from CVE-2024-6387."
else
    echo "OpenSSH version $INSTALLED_VERSION is not affected by CVE-2024-6387."
fi

# Notify the user to monitor logs and restrict SSH access
echo "It's recommended to monitor SSH logs and restrict SSH access to trusted networks."
echo "Please ensure to use key-based authentication for enhanced security."
